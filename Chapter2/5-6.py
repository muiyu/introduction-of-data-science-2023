def square_root(c):
    g = c/4
    i = 0
    while(abs(g*g-c)>1e-12):
        g = (g+c/g)/2
        i += 1
        print("第%d次迭代的结果为%f"%(i,g))

square_root(2000)
#对于如何设置c的初始值，其实没有太大要求。它更多影响的是迭代次数，而不是最终的结果。最后的结果能够保证在精度以内。选取较好的初始值可以减少迭代次数，但对于高效率的牛顿法来说没有太大作用。